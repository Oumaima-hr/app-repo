name: Build and Push Docker Image

on:
  push:
    branches:
      - main # Déclenche le workflow quand il y a un push sur la branche main
    tags:
      - 'v*'  # Déclenche aussi le workflow quand un tag est créé, pour PROD

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout le code source
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Configurer Docker Buildx (pour la construction d'image)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # 3. Connexion à DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}  # Ajoute ton DockerHub username dans les secrets
        password: ${{ secrets.DOCKERHUB_TOKEN }}  # Ajoute ton DockerHub token dans les secrets

    # 4. Construire l'image Docker
    - name: Build and push Docker image
      run: |
        IMAGE_TAG=${GITHUB_SHA}  # Utilise le commit SHA comme tag
        docker build -t myrepo/myapp:$IMAGE_TAG .
        docker push myrepo/myapp:$IMAGE_TAG

    # 5. Mettre à jour le fichier Helm (values.yaml) avec le nouveau tag d'image
    - name: Update Helm values.yaml with new image tag
      run: |
        sed -i "s|image: myrepo/myapp:.*|image: myrepo/myapp:$IMAGE_TAG|" helm/values.yaml
        git add helm/values.yaml
        git commit -m "Update Helm values with new image tag $IMAGE_TAG"
        git push
